2. (a)
#include <stdio.h>

int main()
{
    int a,b;
    scanf("%d",&a);
    scanf("%d",&b);
    char c;
    scanf("%c ",&c);
    if (a>b)
    {
        printf("%d\n",a-b);
    }
    else if (a<b)
    {
        printf("%d\n",a+b);
    }
    else
    {
        printf("%d\n",a*b);
    }
    return 0;
}


(b)
#include <stdio.h>
#include <string.h>
int main()
{
    char string1[100];
    char character;
    FILE *input, *output;
    input=fopen("input.txt","w");

    gets(string1);
    fprintf(input,"%s\n",string1);
    fclose(input);

    output=fopen("output.txt","w");
    input=fopen("input.txt","r");
    char temp = ' ';
    while(!feof(input))
        {
            fscanf(input,"%c",&character);
            if (character == ' ' && temp != ' ')
            {
                fprintf(output,"%c",character);
            }
            else if (character != ' ')
            {
                fprintf(output,"%c",character);
            }
            temp = character;
        }

    fclose(input);
    fclose(output);
}
    /*
    char string[1000], string2 [1000]="";
    gets(string);
    int counter = 0;
    for (int x=0; x<strlen(string); x++)
    {
        if (string[x] == ' ' && (x-1>=0) && string[x-1]!= ' ')
        {
            string2[counter] = string[x];
            counter++;
        }
        else if (string[x] != ' ')
        {
            string2[counter] = string[x];
            counter++;
        }
    }
    printf("%s\n",string2);
    return 0;
}
*/

(c)

#include <stdio.h>
#include <string.h>
#include <ctype.h>

int main()
{
    char password[1000];
    char output[1000] = "";
    char check0[10] = "OK  ";
    char check1[1000] = "Lowercase character missing, ";
    char check2[1000] = "Uppercase character missing, ";
    char check3[1000] = "Digit missing, ";
    char check4[1000] = "Special character missing, ";
    char result[100]="";
    int lower_case = 0;
    int upper_case = 0;
    int digit = 0;
    int special_character = 0;
    gets(password);

    for (int x=0;x<strlen(password);x++)
    {
        if (password[x] >= 'a' && password[x] <= 'z')
        {
            lower_case++;
        }
        if (password[x] >= 'A' && password[x] <= 'Z')
        {
            upper_case++;
        }
        if (isdigit(password[x]))
        {
             digit++;
        }
        if (password[x] == '_' || password[x] == '$' || password[x] == '#' || password[x] == '@')
        {
             special_character++;
        }
    }
    if (lower_case>0 && upper_case>0 && digit>0 && special_character>0)
    {
        strcat(output,check0);
    }
    else if (lower_case == 0)
        {
            strcat(output,check1);
        }
    else if (upper_case == 0)
        {
            strcat(output,check2);
        }
    else if (digit == 0)
        {
            strcat(output,check3);
        }
    else if (special_character == 0)
        {
            strcat(output,check4);
        }
    for (int y=0; y<strlen(output)-2; y++)
    {
        result[y]=output[y];
    }
    for (int y=0; y<strlen(output)-2;y++)
    {
        result[y]= output[y];
    }

    printf("%s",result);

    return 0;
}


(d)
#include <stdio.h>
#include <string.h>

int main()
{
    char email[1000], correct[100]="sheba.xyz";
    gets(email);
    if (strstr(email, correct) != NULL)
    {
        printf("Email address is okay");
    }
    else
    {
        printf("Email address is outdated");
    }
    return 0;
}


(e)
#include <stdio.h>
#include <string.h>

int main()
{
    char string[1000];
    int x=0, length = strlen(string)-1;
    gets(string);

    while (length > x)
        {
        if (string[x++] != string[length--])
        {
            printf("Not Palindrome\n");
            return 0;
        }
    }
    printf("Palindrome\n");
    return 0;
}
